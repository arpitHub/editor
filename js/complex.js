// Generated by CoffeeScript 1.6.3
var LiveJS,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

LiveJS = {};

LiveJS.User = (function() {
  User.prototype.name = null;

  function User(name) {
    this.name = name;
    this.setName = __bind(this.setName, this);
    this.getName = __bind(this.getName, this);
  }

  User.prototype.getName = function() {
    return this.name;
  };

  User.prototype.setName = function(name) {
    this.name = name;
  };

  return User;

})();

LiveJS.fileExplorer = (function() {
  fileExplorer.prototype.noToggle = false;

  fileExplorer.prototype.user = null;

  fileExplorer.prototype.fileName = void 0;

  function fileExplorer(user) {
    this.user = user;
    this.events = __bind(this.events, this);
    this.saveFile = __bind(this.saveFile, this);
    this.showCreateUser = __bind(this.showCreateUser, this);
    this.toggle = __bind(this.toggle, this);
    this.getFolder = __bind(this.getFolder, this);
    this.showSaveCall = __bind(this.showSaveCall, this);
    this.execute = __bind(this.execute, this);
    this.userExists = __bind(this.userExists, this);
  }

  fileExplorer.prototype.userExists = function() {
    if (this.user) {
      if (this.user.getName()) {
        return true;
      }
    }
    return false;
  };

  fileExplorer.prototype.execute = function() {
    var result;
    result = this.userExists();
    if (result === false) {
      this.showCreateUser();
    }
    return this.showSaveCall();
  };

  fileExplorer.prototype.showSaveCall = function() {
    if (this.fileName === void 0) {
      return this.getFolder(this.user.getName());
    } else {
      this.noToggle = true;
      return this.saveFile();
    }
  };

  fileExplorer.prototype.getFolder = function(name) {
    return $.ajax({
      url: "gears/getContents.php",
      method: "GET",
      data: {
        user: this.user.getName()
      },
      success: (function(_this) {
        return function(list) {
          list = tmpl(template.get('files'), {
            files: list.split("{%}")
          });
          $("#filedialog").html(list);
          return _this.toggle();
        };
      })(this)
    });
  };

  fileExplorer.prototype.toggle = function() {
    $("#filedialog").fadeToggle();
    $("#mycan").fadeToggle();
    return this.events();
  };

  fileExplorer.prototype.showCreateUser = function() {
    var name;
    name = prompt("Enter a Name for yourSelf, you can access all your saved files from this name only");
    return this.user = new LiveJS.User(name);
  };

  fileExplorer.prototype.saveFile = function(e) {
    if (this.fileName === void 0) {
      this.fileName = $("#namebar .saveas").val();
    }
    return $.ajax({
      url: "gears/saveFile.php",
      method: "POST",
      data: {
        fileName: this.fileName,
        str: editor.getValue(),
        user: this.user.getName()
      },
      success: (function(_this) {
        return function() {
          alert('File Saved');
          if (!_this.noToggle) {
            return _this.toggle();
          }
        };
      })(this)
    });
  };

  fileExplorer.prototype.events = function() {
    $("#save-saveas").on("click", this.saveFile);
    return $(".saveas").keyup((function(_this) {
      return function(e) {
        if (e.type === "keyup" && e.keyCode === 13) {
          return _this.saveFile(e);
        }
      };
    })(this));
  };

  return fileExplorer;

})();